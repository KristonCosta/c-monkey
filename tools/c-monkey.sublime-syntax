%YAML 1.2
---
# See http://www.sublimetext.com/docs/3/syntax.html
file_extensions:
  - monkey
scope: source.example-c
contexts:
  main:
    # Strings begin and end with quotes, and use backslashes as an escape
    # character
    - match: '"'
      scope: punctuation.definition.string.begin.example-c
      push: double_quoted_string

    # Comments begin with a '//' and finish at the end of the line
    - match: '//'
      scope: punctuation.definition.comment.example-c
      push: line_comment

    # Function let statements
    - match: '\b(let)\s*\b([A-Za-z_][A-Za-z_0-9]*)\s*(=)\s*(fn)'
      captures:
        1: keyword.control.example-c
        2: entity.name.function.example-c
        3: keyword.operator.example-c
        4: keyword.control.example-c

    # Keywords
    - match: '\b(if|else|while|fn|let|return)\b'
      scope: keyword.control.example-c

    # Builtins
    - match: '\b(print|sprint|len|head|tail|push)\b'
      scope: variable.function.example-c

    # Numbers
    - match: '\b(-)?[0-9.]+\b'
      scope: constant.numeric.example-c

    # User defined function call
    - match: '\b([A-Za-z_][A-Za-z_0-9]*)(\()'
      captures:
        1: entity.name.function.example-c

  double_quoted_string:
    - meta_scope: string.quoted.double.example-c
    - match: '\\.'
      scope: constant.character.escape.example-c
    - match: '"'
      scope: punctuation.definition.string.end.example-c
      pop: true

  line_comment:
    - meta_scope: comment.line.example-c
    - match: $
      pop: true
